Team_FGA <- TeamStats$FGA2 + TeamStats$FGA3
Team_FTM <- TeamStats$FTM
Team_FTA <- TeamStats$FTA
Team_FGM3 <- TeamStats$FGM3
Team_TO <- TeamStats$TO
MinPlayedDirty <- TeamStats$Tmp
Team_MP <- as.double(gsub(":00","",MinPlayedDirty))
Team_AST <- TeamStats$AST
Team_PTS <- TeamStats$Pts
#Function Variables
Qst <- QAST(MP,Team_MP,Team_AST,AST,Team_FGM,FGM)
Team_ORBp <- TeamORBpercentage (Team_ORB,Opponent_DRB)
Team_Scoring_Poss <- TeamScoringPoss(Team_FGM,Team_FTM,Team_FTA)
Team_Playp <- TeamPlay(Team_Scoring_Poss,Team_FGA,Team_FTA,Team_TO)
Team_ORB_weight <- Team_ORB_Weight(Team_ORBp,Team_Playp)
FGPart <- FG_Part(FGM,FTM,FGA,PTS,Qst)
ASTPart <- AST_Part(Team_PTS,Team_FTM,Team_FGA,PTS,FTM,FGA,AST)
FTPart <- FT_Part(FTM,FTA)
ORBPart <- ORPart(ORB,Team_ORB_weight,Team_Playp)
ScPoss <- ScPossesion(FGPart,ASTPart,FTPart,Team_ORB,Team_Scoring_Poss,Team_ORB_weight,Team_Playp,ORBPart)
MissedFGPoss <- MissedFGPart(FGA,FGM,Team_ORBp)
MissedFTPoss <- MissedFTPart(FTM,FTA)
TotalPlayerPoss <- TotalPlayerPossesion(ScPoss,MissedFGPoss,MissedFTPoss,TO)
PointsProd_FG_Part <- PointsProd_FG_part(FGM,FGM3,PTS,FTM,FGA,Qst)
PointsProd_AST_Part <- PointsProd_AST_part(Team_FGM,Team_FGM3,Team_PTS,Team_FTM,Team_FGA,FGM,FGM3,PTS,FTM,FGA,AST)
PointsProd_ORB_Part <- PointsProd_ORB_part(ORB,Team_ORB_weight,Team_Playp,Team_PTS,Team_FGM,Team_FTM,Team_FTA)
PointsProd <- PointsProduction(PointsProd_FG_Part, PointsProd_AST_Part, PointsProd_ORB_Part,FTM,Team_ORB,Team_Scoring_Poss,Team_ORB_weight,Team_Playp)
IndivORTG <- round(IndivOrtg(PointsProd,TotalPlayerPoss),2)
#Drtg
Opponent_FTA <- TeamStats$FTA
Opponent_FTM <- TeamStats$FTM
OppPlayedDirty <- TeamStats$OppMP
Opponent_MP <- as.double(gsub(":00","",OppPlayedDirty))
Opponent_TO <- TeamStats$OppTO
Opponent_FGA <- TeamStats$OppFGA2+TeamStats$OppFGA3
Opponent_FGM <- TeamStats$OppFGM2 + TeamStats$OppFGM3
Opponent_ORB <- TeamStats$OppOffReb
Opponent_PTS <- TeamStats$OppPts
Team_DRB <- TeamStats$DefReb
Team_BLK <- TeamStats$BLK
Team_STL <- TeamStats$STL
Team_PF <- TeamStats$FLC
Team_Possessions <- Team_FGA + ( 0.44 * Team_FTA ) + Team_TO - Team_ORB
DORper <- Opponent_ORB/(Opponent_ORB+Team_DRB)
DFGper <- Opponent_FGM/Opponent_FGA
FMwt <- FmWtFun(DFGper,DORper)
Stop1 <- STL + BLK * FMwt * (1 - 1.07 * DORper) + DRB * (1 - FMwt)
Stop2 <- (((Opponent_FGA - Opponent_FGM - Team_BLK) / Team_MP) * FMwt * (1 - 1.07 * DORper) +
((Opponent_TO - Team_STL) / Team_MP)) * MP + (PF / Team_PF) * 0.4 * Opponent_FTA * (1 - (Opponent_FTM / Opponent_FTA))^2
Stops = Stop1+Stop2
StopPer <- (Stops * Opponent_MP) / (Team_Possessions * MP)
Team_Defensive_Rating <- 100 * (Opponent_PTS / Team_Possessions)
D_Pts_per_ScPoss <- Opponent_PTS / (Opponent_FGM + (1 - (1 - (Opponent_FTM / Opponent_FTA))^2) * Opponent_FTA*0.4)
IndivDRTG  <- round(Team_Defensive_Rating + 0.2 * (100 * D_Pts_per_ScPoss * (1 - StopPer) - Team_Defensive_Rating),2)
AstTo <- round(Ast_To(AST,TO),2)
UsgPer <- round(Usg(FGA,FTA,TO,Team_MP,MP,Team_FGA,Team_FTA,Team_TO),2)
PPS <- round(PointsPerShot(PTS,FGA),2)
TS <- round(TrueShootin(PTS,FGA,FTA),2)
ORBPercentage <-round(ORBper(ORB,Team_MP,MP,Team_ORB,Opponent_DRB),2)
DRBPercentage <- round(100 * (DRB * (Team_MP / 5)) / (MP * (Team_DRB + Opponent_ORB)),2)
TotalRebPer <- round(100 * ((ORB+ DRB) * (Team_MP / 5)) / (MP * (((Team_ORB+Team_DRB) + (Opponent_DRB+Opponent_ORB)))),2)
IndivNRTG <- round((IndivORTG -IndivDRTG),2)
AdvPlayerStats[player,] <- data.frame(Player = c(PlayerStats$Player),Games = c(PlayerStats$G), Min = c(MinutesDir1), "Ast/To" = c(AstTo),
PPS = c(PPS), DRTG = c(IndivDRTG), ORTG = c(IndivORTG),NRTG = c(IndivNRTG) ,"TS%"= c(TS),"USG%" = c(UsgPer),"ORB%"= c(ORBPercentage),
"DRB%" = c(DRBPercentage), "TRB%" = c(TotalRebPer),
FGA2= c(PlayerStats$FGA2),FGA3= c(PlayerStats$FGA3),FGM2= c(PlayerStats$FGM2),FGM3= c(PlayerStats$FGM3),
Season = c(PlayerStats$Season),Team = c(Team), stringsAsFactors = FALSE)
}
}
}else if(PlayerStats$Season == "2016-2017"){
for(team in NumOfTeams16){
TeamStats <- S1617[team,]
if(PlayerStats$Team == TeamStats$Teams){
#Player Stats
FGM <- PlayerStats$FGM2 + PlayerStats$FGM3
FGA <- PlayerStats$FGA2 + PlayerStats$FGA3
FTM <- PlayerStats$FTM
PlayerStats$Team[is.na(PlayerStats$Team)] <- 0
Team <- PlayerStats$Team
FTA <- PlayerStats$FTA
FGM3 <-PlayerStats$FGM3
MinutesDir1 <- gsub(":00","",PlayerStats$Min)
MP <- convertToMin(MinutesDir1)
AST <- PlayerStats$As
PTS <- PlayerStats$Pts
TO <- PlayerStats$To
ORB <- PlayerStats$O
STL <- PlayerStats$St
BLK <- PlayerStats$Fv
DRB <- PlayerStats$D
PF <-  PlayerStats$Cm
#Team Stats
Team_ORB <- TeamStats$OR
Opponent_DRB <- TeamStats$OppDefReb
Team_FGM <- TeamStats$FGM2+TeamStats$FGM3
Team_FGA <- TeamStats$FGA2 + TeamStats$FGA3
Team_FTM <- TeamStats$FTM
Team_FTA <- TeamStats$FTA
Team_FGM3 <- TeamStats$FGM3
Team_TO <- TeamStats$TO
MinutesDir <- gsub(":00","",TeamStats$Tmp)
Team_MP <- convertToMin(MinutesDir1 = MinutesDir)
Team_AST <- TeamStats$AST
Team_PTS <- TeamStats$Pts
#Function Variables
Qst <- QAST(MP,Team_MP,Team_AST,AST,Team_FGM,FGM)
Team_ORBp <- TeamORBpercentage (Team_ORB,Opponent_DRB)
Team_Scoring_Poss <- TeamScoringPoss(Team_FGM,Team_FTM,Team_FTA)
Team_Playp <- TeamPlay(Team_Scoring_Poss,Team_FGA,Team_FTA,Team_TO)
Team_ORB_weight <- Team_ORB_Weight(Team_ORBp,Team_Playp)
FGPart <- FG_Part(FGM,FTM,FGA,PTS,Qst)
ASTPart <- AST_Part(Team_PTS,Team_FTM,Team_FGA,PTS,FTM,FGA,AST)
FTPart <- FT_Part(FTM,FTA)
ORBPart <- ORPart(ORB,Team_ORB_weight,Team_Playp)
ScPoss <- ScPossesion(FGPart,ASTPart,FTPart,Team_ORB,Team_Scoring_Poss,Team_ORB_weight,Team_Playp,ORBPart)
MissedFGPoss <- MissedFGPart(FGA,FGM,Team_ORBp)
MissedFTPoss <- MissedFTPart(FTM,FTA)
TotalPlayerPoss <- TotalPlayerPossesion(ScPoss,MissedFGPoss,MissedFTPoss,TO)
PointsProd_FG_Part <- PointsProd_FG_part(FGM,FGM3,PTS,FTM,FGA,Qst)
PointsProd_AST_Part <- PointsProd_AST_part(Team_FGM,Team_FGM3,Team_PTS,Team_FTM,Team_FGA,FGM,FGM3,PTS,FTM,FGA,AST)
PointsProd_ORB_Part <- PointsProd_ORB_part(ORB,Team_ORB_weight,Team_Playp,Team_PTS,Team_FGM,Team_FTM,Team_FTA)
PointsProd <- PointsProduction(PointsProd_FG_Part, PointsProd_AST_Part, PointsProd_ORB_Part,FTM,Team_ORB,Team_Scoring_Poss,Team_ORB_weight,Team_Playp)
IndivORTG <- round(IndivOrtg(PointsProd,TotalPlayerPoss),2)
#Drtg
Opponent_FTA <- TeamStats$FTA
Opponent_FTM <- TeamStats$FTM
OppPlayedDirty <- TeamStats$OppMP
Opponent_MP <- as.double(gsub(":00","",OppPlayedDirty))
Opponent_TO <- TeamStats$OppTO
Opponent_FGA <- TeamStats$OppFGA2+TeamStats$OppFGA3
Opponent_FGM <- TeamStats$OppFGM2 + TeamStats$OppFGM3
Opponent_ORB <- TeamStats$OppOffReb
Opponent_PTS <- TeamStats$OppPts
Team_DRB <- TeamStats$DefReb
Team_BLK <- TeamStats$BLK
Team_STL <- TeamStats$STL
Team_PF <- TeamStats$FLC
Team_Possessions <- Team_FGA + ( 0.44 * Team_FTA ) + Team_TO - Team_ORB
DORper <- Opponent_ORB/(Opponent_ORB+Team_DRB)
DFGper <- Opponent_FGM/Opponent_FGA
FMwt <- FmWtFun(DFGper,DORper)
Stop1 <- STL + BLK * FMwt * (1 - 1.07 * DORper) + DRB * (1 - FMwt)
Stop2 <- (((Opponent_FGA - Opponent_FGM - Team_BLK) / Team_MP) * FMwt * (1 - 1.07 * DORper) +
((Opponent_TO - Team_STL) / Team_MP)) * MP + (PF / Team_PF) * 0.4 * Opponent_FTA * (1 - (Opponent_FTM / Opponent_FTA))^2
Stops = Stop1+Stop2
StopPer <- (Stops * Opponent_MP) / (Team_Possessions * MP)
Team_Defensive_Rating <- 100 * (Opponent_PTS / Team_Possessions)
D_Pts_per_ScPoss <- Opponent_PTS / (Opponent_FGM + (1 - (1 - (Opponent_FTM / Opponent_FTA))^2) * Opponent_FTA*0.4)
IndivDRTG  <- round(Team_Defensive_Rating + 0.2 * (100 * D_Pts_per_ScPoss * (1 - StopPer) - Team_Defensive_Rating),2)
AstTo <- round(Ast_To(AST,TO),2)
UsgPer <- round(Usg(FGA,FTA,TO,Team_MP,MP,Team_FGA,Team_FTA,Team_TO),2)
PPS <- round(PointsPerShot(PTS,FGA),2)
TS <- round(TrueShootin(PTS,FGA,FTA),2)
ORBPercentage <-round(ORBper(ORB,Team_MP,MP,Team_ORB,Opponent_DRB),2)
DRBPercentage <- round(100 * (DRB * (Team_MP / 5)) / (MP * (Team_DRB + Opponent_ORB)),2)
TotalRebPer <- round(100 * ((ORB+ DRB) * (Team_MP / 5)) / (MP * (((Team_ORB+Team_DRB) + (Opponent_DRB+Opponent_ORB)))),2)
IndivNRTG <- round((IndivORTG -IndivDRTG),2)
AdvPlayerStats[player,] <- data.frame(Player = c(PlayerStats$Player),Games = c(PlayerStats$G), Min = c(MinutesDir1), "Ast/To" = c(AstTo),
PPS = c(PPS), DRTG = c(IndivDRTG), ORTG = c(IndivORTG),NRTG = c(IndivNRTG) ,"TS%"= c(TS),"USG%" = c(UsgPer),"ORB%"= c(ORBPercentage),
"DRB%" = c(DRBPercentage), "TRB%" = c(TotalRebPer),
FGA2= c(PlayerStats$FGA2),FGA3= c(PlayerStats$FGA3),FGM2= c(PlayerStats$FGM2),FGM3= c(PlayerStats$FGM3),
Season = c(PlayerStats$Season),Team = c(Team), stringsAsFactors = FALSE)
}
}
}else if(PlayerStats$Season == "2015-2016"){
#AddData
}else if(PlayerStats$Season == "2014-2015"){
#AddDate
}
AdvPlayerStats[is.na(AdvPlayerStats)] <- 0
write.csv(AdvPlayerStats, file = "AdvPlayerStats.csv",row.names = FALSE)
}else{
print("less than 5 games")
}
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
library(shiny); runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
bsExample("Alerts")
runApp('PicknStatsApp.R')
install.packages("shinyBS")
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
bsAlert("alert")
bsExample("Alerts")
runApp('B:/BballProject/R Scripts/PicknStatsApp.R')
library(shiny); runApp('PicknStatsApp.R')
library(shiny); runApp('PicknStatsApp.R')
View(AdvPlayerStats)
runApp('PicknStatsApp.R')
View(AdvPlayerStats)
View(AdvPlayerStats)
View(AdvPlayerStats)
runApp('PicknStatsApp.R')
View(AdvPlayerStats)
View(AdvPlayerStats)
View(AdvPlayerStats)
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
library(shiny); runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
if (interactive()) {
ui <- fluidPage(
downloadLink("downloadData", "Download")
)
server <- function(input, output) {
# Our dataset
data <- mtcars
output$downloadData <- downloadHandler(
filename = function() {
paste("data-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(data, file)
}
)
}
shinyApp(ui, server)
}
if (interactive()) {
ui <- fluidPage(
downloadLink("downloadData", "Download")
)
server <- function(input, output) {
# Our dataset
data <- mtcars
output$downloadData <- downloadHandler(
filename = function() {
paste("data-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(data, file)
}
)
}
shinyApp(ui, server)
}
if (interactive()) {
ui <- fluidPage(
downloadLink("downloadData", "Download")
)
server <- function(input, output) {
# Our dataset
data <- mtcars
output$downloadData <- downloadHandler(
filename = function() {
paste("data-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(data, file)
}
)
}
shinyApp(ui, server)
}
shiny::runApp('D:/Documents/Test/test')
install.packages("reticulate")
runApp('D:/Documents/Test/test')
runApp('D:/Documents/Test/test')
runApp('D:/Documents/Test/test')
runApp('D:/Documents/Test/test')
runApp('D:/Documents/Test/test')
y
runApp()
runApp('D:/Documents/Test/test')
library(xlsx)
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('D:/Documents/Test/test')
library(xlsxjars)
install.packages("writexl")
runApp('D:/Documents/Test/test')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?grouping
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?tail
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
?substr
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
?substr
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
?mutate
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
library(shiny); runApp('PicknStatsApp.R')
library(shiny); runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
source('B:/BballProject/R Scripts/SeminarProject.R')
library(shiny); runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
source('B:/BballProject/R Scripts/PlayersAdvancedDatabase.R')
runApp('PicknStatsApp.R')
if(str_sub(OppPlayedDirty, start= -3) ==":00"){
Opponent_MP <- as.double(gsub(":00","",OppPlayedDirty))
}else{
Opponent_MP <- as.double(gsub(":16","",OppPlayedDirty))}
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
library(shiny); runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
library(shiny); runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/AdvanceTeamStatsCalculation.R')
source('B:/BballProject/R Scripts/AdvanceTeamStatsCalculation.R')
source('B:/BballProject/R Scripts/S1819.R')
source('B:/BballProject/R Scripts/AdvanceTeamStatsCalculation.R')
source('B:/BballProject/R Scripts/AdvanceTeamStatsCalculation.R')
source('B:/BballProject/R Scripts/S1819.R')
source('B:/BballProject/R Scripts/S1819.R')
source('B:/BballProject/R Scripts/S1920.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
View(iNFOtable)
View(iNFOtable)
c
runApp('PicknStatsApp.R')
library(shiny); runApp('PicknStatsApp.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/S1819.R')
source('B:/BballProject/R Scripts/S1819.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/S1819.R')
runApp('PicknStatsApp.R')
source('B:/BballProject/R Scripts/S1819.R')
source('B:/BballProject/R Scripts/S1819.R')
library(shiny); runApp('PicknStatsApp.R')
